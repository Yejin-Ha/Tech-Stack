/*
# 프로시저 & 함수
- 재사용을 위한 기능 구현
- 기본 문법 흡사


# 프로시저
- 호출 방법이 함수와 차이가 있음


# 함수
- oracle 함수 호출하듯 사용자 정의 함수 호출 가능


# oracle db만의 프로그래밍 개발 방법
1. 이름 없이 단순 개발
2. 프로스저라는 타이틀로 개발 - 이름 부여(재사용)
3. 함수라는 타이틀로 개발 - 이름 부여(재사용)


# 장점
- 단 한번의 실행 만으로 내장 함수처럼 만들어서 필요시 호출해서 실행 가능
- 프로시저와 함수로 구현시 db내부에 pcode로 변환


# 프로시저를 위한 필수 셋팅 
- set serveroutput on 
    - 명령어를 처음에 실행하지 않으면 결과가 출력되지 않는다.


# 필수 암기 
- 할당(대입) 연산자  :=
    - python 연산자 표현법  =

- 선언, 시작, 끝
    declare 
        변수 선언
    begin 
        로직 처리
    end; 
    /

- 실행결과 출력 코드
    dbms_output.put_line(<출력하고 싶은 데이터명>)
    - 다수의 데이터를 출력하고 싶으면 ||를 이용하여 출력한다.
*/

-- 실행결과 출력을 위한 필수 설정
set serveroutput on


-- 






